using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using VTC.Base.GoldParser.Semantic;

namespace VTC.Core
{
   public class GetterDefinition : Definition
    {
       public BlockOrSemi Block;
       public MethodSpec Getter { get; set; }
       public bool AutoGenerated { get { return Block.IsSemi; } }
      [Rule(@"<Getter Decl> ::= ~get <Block Or Semi>")]
       public GetterDefinition(BlockOrSemi bs)
       {
           Block = bs;

       }
      public override FlowState DoFlowAnalysis(FlowAnalysisContext fc)
      {

          return Block.DoFlowAnalysis(fc);
      }
      public override bool Resolve(ResolveContext rc)
      {
          return Block.Resolve(rc);
      }
      public override SimpleToken DoResolve(ResolveContext rc)
      {
          Block = (BlockOrSemi)Block.DoResolve(rc);
          return base.DoResolve(rc);
      }


      public void CreateGetter(ResolveContext rc, PropertySpec ps)
      {
          Getter = new MethodSpec(ps.NS, "get_" + ps.Name, ps.Modifiers, ps.memberType, CallingConventions.Default, new List<TypeSpec>().ToArray(), ps.Signature.Location);
          ps.Getter = Getter;
          if (ps.memberType.Size > 2)
              ResolveContext.Report.Error(0, Location, "Getters must return a 16 bits value");


      }
    }
}
